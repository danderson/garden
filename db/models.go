// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"go.universe.tf/garden/types"
	"go.universe.tf/garden/types/plantfamily"
	"go.universe.tf/garden/types/soiltype"
	"go.universe.tf/garden/types/suntype"
	"go.universe.tf/garden/types/tribool"
)

type Location struct {
	ID         int64          `json:"id"`
	Name       string         `json:"name"`
	InsertedAt types.TextTime `json:"inserted_at"`
	UpdatedAt  types.TextTime `json:"updated_at"`
	QRID       string         `json:"qr_id"`
	QRState    types.QRState  `json:"qr_state"`
}

type LocationsImage struct {
	ID         int64   `json:"id"`
	ImageID    *string `json:"image_id"`
	LocationID *int64  `json:"location_id"`
	InsertedAt string  `json:"inserted_at"`
	UpdatedAt  string  `json:"updated_at"`
}

type Plant struct {
	ID           int64  `json:"id"`
	Name         string `json:"name"`
	SeedID       *int64 `json:"seed_id"`
	InsertedAt   string `json:"inserted_at"`
	UpdatedAt    string `json:"updated_at"`
	NameFromSeed int64  `json:"name_from_seed"`
}

type PlantLocation struct {
	ID         int64          `json:"id"`
	PlantID    int64          `json:"plant_id"`
	LocationID int64          `json:"location_id"`
	Start      types.TextTime `json:"start"`
	End        types.TextTime `json:"end"`
}

type SchemaMigration struct {
	Version    int64   `json:"version"`
	InsertedAt *string `json:"inserted_at"`
}

type Seed struct {
	ID                  int64                   `json:"id"`
	Name                string                  `json:"name"`
	InsertedAt          string                  `json:"inserted_at"`
	UpdatedAt           string                  `json:"updated_at"`
	FrontImageID        *string                 `json:"front_image_id"`
	BackImageID         *string                 `json:"back_image_id"`
	Year                *int64                  `json:"year"`
	Edible              tribool.Tribool         `json:"edible"`
	NeedsTrellis        tribool.Tribool         `json:"needs_trellis"`
	NeedsBirdNetting    tribool.Tribool         `json:"needs_bird_netting"`
	IsKeto              tribool.Tribool         `json:"is_keto"`
	IsNative            tribool.Tribool         `json:"is_native"`
	IsInvasive          tribool.Tribool         `json:"is_invasive"`
	IsCoverCrop         tribool.Tribool         `json:"is_cover_crop"`
	GrowsWellFromSeed   tribool.Tribool         `json:"grows_well_from_seed"`
	IsBadForCats        tribool.Tribool         `json:"is_bad_for_cats"`
	IsDeerResistant     tribool.Tribool         `json:"is_deer_resistant"`
	Type                *string                 `json:"type"`
	Lifespan            *string                 `json:"lifespan"`
	Family              plantfamily.PlantFamily `json:"family"`
	LatinName           string                  `json:"latin_name"`
	NeedsStratification tribool.Tribool         `json:"needs_stratification"`
	SunType             suntype.SunType         `json:"sun_type"`
	SoilType            soiltype.SoilType       `json:"soil_type"`
}
