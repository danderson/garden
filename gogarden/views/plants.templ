package views

import (
	"go.universe.tf/garden/gogarden/db"
	"go.universe.tf/garden/gogarden/forms"
)

templ PlantList(plants []db.SearchPlantsRow) {
	for _, plant := range plants {
		<div hx-get={ f("/plants/%d", plant.ID) }
			 hx-target="body"
			 hx-push-url="true"
			 class="px-2 py-3">
			<p class="font-semibold">{ plant.Name }</p>
			<p class="text-slate-300">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" width="1em" class="inline">
					<path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 1 0 0 11 5.5 5.5 0 0 0 0-11ZM2 9a7 7 0 1 1 12.452 4.391l3.328 3.329a.75.75 0 1 1-1.06 1.06l-3.329-3.328A7 7 0 0 1 2 9Z" clip-rule="evenodd" />
				</svg>

				{ *plant.LocationName }
			</p>
		</div>
	}
}

templ Plants(plants []db.SearchPlantsRow) {
	<div class="sticky bg-slate-700 text-slate-200 top-0 text-xl px-2 py-2 flex gap-2">
		<input size="1" class="flex-grow px-2 text-slate-900 bg-slate-100 rounded-md" type="search" name="q" hx-get="/plants/search" hx-trigger="input changed delay:200ms, search" hx-target="#plants" />
		<button class="py-1 px-2 rounded-lg border-2" hx-get="/plants/new" hx-push-url="true" hx-target="body">Add</button>
	</div>
	<div id="plants" class="flex flex-col">
		@PlantList(plants)
	</div>
}

templ Plant(plant db.Plant, locs []db.GetPlantLocationsRow) {
	<div class="sticky bg-slate-700 text-slate-200 top-0 text-xl px-2 py-2 flex gap-2">
		<button class="py-1 px-2 font-semibold" hx-get="/plants" hx-target="body" hx-push-url="true">X</button>
		<div class="flex-grow"></div>
		<button class="py-1 px-2 rounded-lg border-2" hx-get={ f("/plants/%d/edit", plant.ID) } hx-target="body" hx-push-url="true">Edit</button>
	</div>
	<div class="px-2 py-3">
		<h1 class="text-lg font-semibold">{ plant.Name }</h1>
		if len(locs) > 0 {
			<p class="text-sm">{locs[0].Name}, planted {daysAgo(locs[0].Start.Time)}</p>
		}

		if len(locs) > 1 {
			<h2 class="font-semibold mt-4">Previous locations</h2>
			for _, l := range locs[1:] {
				<p class="text-sm">{l.Name} (from {date(l.Start.Time)} to {date(l.End.Time)}</p>
			}
		}
		<div class="py-2">
			<button class="py-1 px-2 rounded-lg border-2" hx-get={f("/plants/%d/uproot", plant.ID)} hx-swap="outerHTML">Uproot</button>
		</div>
	</div>
}

templ NewPlant(form *forms.Form) {
	<form>
		<div class="sticky bg-slate-700 text-slate-200 top-0 text-xl px-2 py-2 flex gap-2">
			<div class="flex-grow"></div>
			<button class="py-1 px-2 rounded-lg border-2" hx-get="/plants" hx-target="body" hx-push-url="true">Cancel</button>
			<button class="py-1 px-2 rounded-lg border-2" hx-post hx-target="body">Save</button>
		</div>
		@selectInput(form.Fields["SeedID"], "Seed")
		@selectInput(form.Fields["LocationID"], "Location")
		@textInput(form.Fields["Name"], "Name")
	</form>
}

templ EditPlant(id int64, form *forms.Form) {
	<form>
		<div class="sticky bg-slate-700 text-slate-200 top-0 text-xl px-2 py-2 flex gap-2">
			<div class="flex-grow"></div>
			<button class="py-1 px-2 rounded-lg border-2" hx-get={f("/plants/%d", id)} hx-target="body" hx-push-url="true">Cancel</button>
			<button class="py-1 px-2 rounded-lg border-2" hx-post hx-target="body">Save</button>
		</div>
		for _, err := range form.Errors {
			<p class="text-red-400">{err}</p>
		}
		@selectInput(form.Fields["SeedID"], "Seed")
		@selectInput(form.Fields["LocationID"], "Location")
		@textInput(form.Fields["Name"], "Name")
	</form>
}

templ UprootPlantForm(id int64, form *forms.Form) {
	<form id="uproot">
		for _, err := range form.Fields["End"].Errors {
			<p class="text-red-500">{err}</p>
		}
		<input type="date" name="End" class="text-slate-900" value={form.Fields["End"].Value} max={dateToday()} />
		<button class="py-1 px-2 rounded-lg border-2 border-red-500 text-red-500" hx-post={f("/plants/%d/uproot", id)} hx-target="#uproot" hx-swap="outerHTML">Uproot</button>
		<button class="py-1 px-2 rounded-lg border-2" hx-get={f("/plants/%d", id)} hx-target="body">Cancel</button>
	</form>
}
