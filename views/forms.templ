package views

import (
	"go.universe.tf/garden/forms"
)

templ formErrors(form *forms.Form) {
	if len(form.Errors) > 0 {
		<ul class="errors">
			for _, err := range form.Errors {
				<li>{err}</li>
			}
		</ul>
	}
}

templ fieldErrors(field forms.Field) {
	if len(field.Errors) > 0 {
		<ul id={"err-"+field.ID} class="errors">
			for _, err := range field.Errors {
				<li>{err}</li>
			}
		</ul>
	}
}

templ textInput(field forms.Field, label string) {
	<label for={field.ID}>
		{def(label, field.ID)}
	</label>
	<input name={field.ID}
		   id={field.ID}
		   value={s(field.Value)}
		   if len(field.Errors) > 0 {
		       aria-invalid="true"
			   aria-errormessage={"err-"+field.ID}
		   }
	 />
	@fieldErrors(field)
}

templ selectInputWithAttrs(field forms.Field, label string, attrs templ.Attributes) {
	<label for={field.ID}>
		{def(label, field.ID)}
	</label>
	<select name={field.ID}
			id={field.ID}
			value={s(field.Value)}
			if len(field.Errors) > 0 {
				aria-invalid="true"
				aria-errormessage={"err-"+field.ID}
			}
			{ attrs... }>
		for _, opt := range field.Options {
			<option value={opt.Value} selected?={s(field.Value)==opt.Value}>{opt.Label}</option>
		}
	</select>
	@fieldErrors(field)
}

templ selectInput(field forms.Field, label string) {
	@selectInputWithAttrs(field, label, nil)
}

templ hiddenInput(field forms.Field) {
	<input type="hidden" name={field.ID} value={s(field.Value)} />
	@fieldErrors(field)
}

templ dateInput(field forms.Field, label string) {
	<label for={field.ID}>
		{def(label, field.ID)}
	</label>
	<input type="date"
		   name={field.ID}
		   id={field.ID}
		   value={s(field.Value)}
		   max={dateToday()}
		   if len(field.Errors) > 0 {
				aria-invalid="true"
				aria-errormessage={"err-"+field.ID}
		   }
	 />
	@fieldErrors(field)
}
